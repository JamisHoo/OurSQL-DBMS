# This doc shows all commands we should support in our database.
# assert all commands can run in mysql.
# <name> means required variable or name.
# [ ] means optional, that is zero or one.
# * means zero or more.
# { | } means 1-out-of-multi.

# fundamental:

# database manipulation
# FINISHED
CREAETE DATABASE <database name>;
SHOW DATABASES;
USE <database name>;
DROP DATABASE <database name>;

# table manipulation
# FINISHED
CREATE TABLE <table name> (<field name> <type>[(<size>)] [NOT NULL] 
                         [,<filed name> <type>[(<size>)] [NOT NULL]]* 
                         [, PRIMARY KEY (<field name>)]
                         [, CHECK (<condition>)]
                         [, FOREIGN KEY (<field name>) REFERENCES <table name>(<field name>)]*
                         );
SHOW TABLES;
DESC[RIBE] <table name>;
DROP TABLE <table name>;

# index manipulation
# FINISHED
CREATE INDEX ON <table name> (<field name>);
DROP INDEX ON <table name> (<field name>);

# insert record
# FINISHED
INSERT INTO <table name> VALUES (<value> [, <value>]*)
                              (, <value> [, <value>]*);

# delete
# FINISHED
DELETE FROM <table name> [WHERE <simple condition>];

# update
# FINISHED
UPDATE <table name> SET <field name> = <new value> 
                     [, <field name> = <new value>]* 
        WHERE <field name> = <some value>;

# simple select
# FINISHED
SELECT <field name> [, <field name>]* FROM <table name> [WHERE <simple condition>];
SELECT * FROM <table name> [WHERE <simple condition>];
# simple condition excludes table name

# extention
# like in condition
# FINISHED
<left expr> [NOT] LIKE <EMACScript regex>

# complex select
SELECT <table name>.<field name> [, <table name>.<field name>]*
        FROM <table name> WHERE <complex condition>;

# inner join
SELECT <table name>.<field name> [, <table name>.<field name>]*
        FROM <table name> [, <table name>]* WHERE <complex condition>;
# In inner join, on clause and where clause are the same.
SELECT <table name>.<field name> [, <table name>.<field name>]* 
        FROM <table name> [INNER] JOIN <table name> {ON | WHERE} <complex condition>;
# Cross join is the same as inner join with condition clause always equivalent to true.
# So it will be implemented as inner join.
SELECT <table name>.<field name> [, <table name>.<field name>]*
       FROM <table name> CROSS JOIN <table name>;

# outer join, won't support
SELECT <table name>.<field name> [, <table name>.<field name>]*
        FROM <table name> {LEFT | RIGHT | FULL} [OUTER] JOIN <table name> 
        ON <complex condition> [WHERE <complex condition>];



# TODO
# select aggregate function, count, avg, max, min, sum...
# consider join three tables or above
