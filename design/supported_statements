###############################################################################
 #  Copyright (c) 2015 Jamis Hoo 
 #  Distributed under the MIT license 
 #  (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)
 #  
 #  Project: Database
 #  Filename: test.cc 
 #  Version: 1.0
 #  Author: Jamis Hoo
 #  E-mail: hjm211324@gmail.com
 #  Date: Jan. 01, 2015
 #  Time: 21:56:34
 #  Description: All SQL statements supported in this project.
 #               All statements can run in MySQL.
 #               But 'like' and 'check' act differently with MySQL.
 #               <name> means required variable or name.
 #               [ ] means optional, that is zero or one.
 #               * means zero or more.
 #               { | } means 1-out-of-multi.
 ##############################################################################

# fundamental:

# database manipulation
# FINISHED
CREAETE DATABASE <database name>;
SHOW DATABASES;
USE <database name>;
DROP DATABASE <database name>;

# table manipulation
# FINISHED
CREATE TABLE <table name> (<field name> <type>[(<size>)] [NOT NULL] 
                         [,<filed name> <type>[(<size>)] [NOT NULL]]* 
                         [, PRIMARY KEY (<field name>)]
                         [, CHECK (<condition>)]
                         [, FOREIGN KEY (<field name>) REFERENCES <table name>(<field name>)]*
                         );
SHOW TABLES;
DESC[RIBE] <table name>;
DROP TABLE <table name>;

# index manipulation
# FINISHED
CREATE INDEX ON <table name> (<field name>);
DROP INDEX ON <table name> (<field name>);

# insert record
# FINISHED
INSERT INTO <table name> VALUES (<value> [, <value>]*)
                              (, <value> [, <value>]*)*;

# delete
# FINISHED
DELETE FROM <table name> [WHERE <conditions>];

# update
# FINISHED
UPDATE <table name> SET <field name> = <new value> 
                     [, <field name> = <new value>]* 
        WHERE <conditions>;

# simple select
# FINISHED
SELECT <field name | *> [, <field name | *>]* FROM <table name> 
                    [WHERE <conditions>]
                    [, GROUP BY <field name>]
                    [, ORDER BY <field name> [ASC | DESC]];
# simple condition excludes table name

# extention
# like in condition
# FINISHED
<left expr> [NOT] LIKE <EMACScript regex>

# inner join
SELECT <table name>.<field name> [, <table name>.<field name>]*
        FROM <table name> [, <table name>]* [WHERE <complex conditions>]
                                            [, GROUP BY <table name>.<field name>]
                                            [, ORDER BY <table name>.<field name> [ASC | DESC]];




